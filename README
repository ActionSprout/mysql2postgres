Tool for converting mysql database to postgresql.
It can create postgresql dump from mysql database or directly load data from mysql to
postgresql (at about 100 000 records per minute).

It can translate now most data types and indexes, but if you experience some problems, feel free
to contact me, I'll help you.


After editing config.yml and launching tool, You can see something like..

Creating table friendships...
Created table friendships
Loading friendships...
620000 of 638779 rows loaded. [ETA: 2010/01/21 21:32 (00h:00m:01s)]
638779 rows loaded in 1min 3s
Indexing table friendships...
Indexed table friendships
Table creation 0 min, loading 1 min, indexing 0 min, total 1 min

== Running tests


Integration tests require suitable mysql and postgres databases to be setup in advance:

mysql on localhost:3306
- database created called "mysql2psql_test"
- user setup for "mysql2psql" with no password
- e.g. 
  mysqladmin -uroot -p create mysql2psql_test
  mysql -uroot -p -e "grant all on mysql2psql_test.* to 'mysql2psql'@'localhost';"
  # verify connecction:
  mysql -umysql2psql -e "select database(),'yes' as connected" mysql2psql_test
  
postgres on localhost:5432
- database created called "mysql2psql_test" 
- role (user) access setup for "mysql2psql" with no password
- e.g.
  psql postgres -c "create role mysql2psql with login"
  psql postgres -c "create database mysql2psql_test with owner mysql2psql encoding='UTF8'"
  # verify connection:
  psql mysql2psql_test -U mysql2psql -c "\c"

==
# note from mgkimsal
I'm still having trouble with bit(1)/boolean fields
workaround I've found is to put output in file
then in VIM on file, search/replace the true/false binary fields with t/f
specifically

(reversed on 3/23 - should be ^A gets f)
:%s/^@/t/g
:%s/^A/f/g
keystrokes are ctrl-v ctrl-shift-@ to get the 'true' binary field
keystrokes are ctrl-v ctrl-shift-A to get the 'false' binary field


# This tool converts mysql database to posgresql.
# Main repository is http://github.com/maxlapshin/mysql2postgres 
# Copyright 2009-2010 Max Lapshin <max@maxidoors.ru>
#
# Other contributors (in git log order):
# Anton Ageev <anton@ageev.name>
# Samuel Tribehou <cracoucax@gmail.com>
# Marco Nenciarini <marco.nenciarini@devise.it>
# James Nobis <jnobis@jnobis.controldocs.com>
# quel <github@quelrod.net>
# Holger Amann <keeney@fehu.org>
# Maxim Dobriakov <closer.main@gmail.com>
# Michael Kimsal <mgkimsal@gmail.com>
# Jacob Coby <jcoby@portallabs.com>
# Neszt Tibor <neszt@tvnetwork.hu>
# Miroslav Kratochvil <exa.exa@gmail.com>
#
# I copy here config.yml.sample if you've got this file alone
#
# -----------------------
# mysql:
#  hostname: localhost
#  port: 3306
#  socket: /tmp/mysql.sock
#  username: somename
#  password: secretpassword
#  database: somename 
# 
# destination:
#  # if file is given, output goes to file, else postgres
#  file:
#  postgres:
#   hostname: localhost
#   port: 5432
#   username: somename
#   password: secretpassword
#   database: somename
# 
# # if tables is given, only the listed tables will be converted.  leave empty to convert all tables.
# #tables:
# #- table1
# #- table2
# #- table3
# #- table4
# 
# # if exclude_tables is given, exclude the listed tables from the conversion.
# #exclude_tables:
# #- table5
# #- table6
#
# -----------------------
#
#
# Copy contents between lines into config.yml, edit it according to your settings
# and run mysql2psql. It will load mysql database directly into postgres, autoconverting all

 

